{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\App.svelte",
    "..\\..\\Roller.svelte",
    "..\\..\\Settings.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Roller from './components/Roller.svelte';\n  import Settings from './components/Settings.svelte';\n  import Control from './components/Control.svelte';\n</script>\n\n<style>\n  main {\n    text-align: center;\n    padding: 1em;\n    max-width: 800px;\n    margin: auto;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  .roller {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .setting-panel {\n  }\n</style>\n\n<main>\n  <div class=\"roller\">\n    <Roller />\n    <Control />\n  </div>\n  <div class=\"setting-panel\">\n    <Settings />\n  </div>\n</main>\n",
    "<script>\r\n  import { settings, rolling, activeItem } from './../store';\r\n  let rollingInterval;\r\n\r\n  rolling.subscribe(isRolling => {\r\n    if (isRolling) {\r\n      rollingInterval = setInterval(() => {\r\n        const activeIndex = Math.floor(\r\n          Math.random() * ($settings.rollingItems.length || 0),\r\n        );\r\n        activeItem.set(activeIndex);\r\n      }, 50);\r\n    } else {\r\n      clearInterval(rollingInterval);\r\n    }\r\n  });\r\n</script>\r\n\r\n<style>\r\n  .wrapper {\r\n    display: flex;\r\n    width: 100%;\r\n  }\r\n  .item {\r\n    height: 40px;\r\n    width: 60px;\r\n    padding: 10px;\r\n    margin: 5px 2px;\r\n    border: 1px solid lightgrey;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  .active {\r\n    background: lightgrey;\r\n  }\r\n</style>\r\n\r\n<div class=\"wrapper\">\r\n  {#each $settings.rollingItems as item, index (item.label)}\r\n    <div class=\"item\" class:active={$rolling && $activeItem === index}>\r\n      {item.label}\r\n    </div>\r\n  {/each}\r\n</div>\r\n",
    "<script>\r\n  import { settings } from './../store';\r\n\r\n  let items;\r\n\r\n  settings.subscribe(value => {\r\n    items = value.rollingItems;\r\n  });\r\n</script>\r\n\r\n<style>\r\n  label {\r\n    font-size: 1.4em;\r\n  }\r\n  .wrapper {\r\n    display: flex;\r\n    padding: 20px;\r\n  }\r\n\r\n  .list {\r\n    width: 50%;\r\n    text-align: left;\r\n  }\r\n</style>\r\n\r\n<div class=\"wrapper\">\r\n  <div class=\"list\">\r\n    <label>Label</label>\r\n    {#each items as item (item.label)}\r\n      <input type=\"text\" bind:value={item.label} />\r\n    {/each}\r\n  </div>\r\n  <div class=\"list\">\r\n    <label>Probability</label>\r\n\r\n    {#each items as item (item.label)}\r\n      <input type=\"number\" bind:value={item.probability} />\r\n    {/each}\r\n  </div>\r\n</div>\r\n"
  ],
  "names": [],
  "mappings": "AAOE,IAAI,eAAC,CAAC,AACJ,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,aAAa,AAChC,CAAC,AAED,OAAO,eAAC,CAAC,AACP,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,AACzB,CAAC,AAED,cAAc,eAAC,CAAC,AAChB,CAAC;ACND,QAAQ,eAAC,CAAC,AACR,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,IAAI,AACb,CAAC,AACD,KAAK,eAAC,CAAC,AACL,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,GAAG,CAAC,GAAG,CACf,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,SAAS,CAC3B,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,AACzB,CAAC,AAED,OAAO,eAAC,CAAC,AACP,UAAU,CAAE,SAAS,AACvB,CAAC;ACzBD,KAAK,eAAC,CAAC,AACL,SAAS,CAAE,KAAK,AAClB,CAAC,AACD,QAAQ,eAAC,CAAC,AACR,OAAO,CAAE,IAAI,CACb,OAAO,CAAE,IAAI,AACf,CAAC,AAED,KAAK,eAAC,CAAC,AACL,KAAK,CAAE,GAAG,CACV,UAAU,CAAE,IAAI,AAClB,CAAC"
}